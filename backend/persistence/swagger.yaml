#  Copyright (c) 2017 SHIELD, UBIWHERE
# ALL RIGHTS RESERVED.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Neither the name of the SHIELD, UBIWHERE nor the names of its
# contributors may be used to endorse or promote products derived from this
# software without specific prior written permission.
#
# This work has been performed in the framework of the SHIELD project,
# funded by the European Commission under Grant number 700199 through the
# Horizon 2020 program. The authors would like to acknowledge the contributions
# of their colleagues of the SHIELD partner consortium (www.shield-h2020.eu).


# HTTP responses.
responses: &API_RESPONSES
  200: &HTTP_200_OK
    description: Request succeeded.
  201: &HTTP_201_CREATED
    description: Resource created.
  202: &HTTP_202_ACCEPTED
    description: >-
      Request processing. You can retry your request, and when it's complete,
      you'll get a 200 instead.
  400: &HTTP_400_BAD_REQUEST
    description: Bad request. API specific parameters are incorrect or missing.
  401: &HTTP_401_UNAUTHORIZED
    description: Unauthorised. You're not authorised to access this resource.
  404: &HTTP_404_NOT_FOUND
    description: Not found. The requested resource doesn't exist.
  500: &HTTP_500_INTERNAL_SERVER_ERROR
    description: Server errors. Our bad!
  501: &HTTP_501_NOT_IMPLEMENTED
    description: Not implemented yet.
  504: &HTTP_504_GATEWAY_TIMEOUT
    description: Timeout. A request to a third-party has taken too long to be served.


swagger: '2.0'
info:
  description: >
               This API handles the security recommendations CRUD operations.
               

               _Please note that consumers are not allowed to edit (`PATCH`), update (`PUT`) or delete (`DELETE`) a resource unless they provide an up-to-date `ETag` for the resource they are attempting to edit. This value, taken from the details (`GET`) request, is mandatory and should be provided in the `If-Match` header_.


               API version numbering as per http://semver.org/
  version: 0.1.0
  title: Dashboard API
  termsOfService: ''
  contact:
    email: shield-eu@ubiwhere.com
  license:
    name: Apache License, Version 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: TBD
basePath: /v0.1.0
tags:
  - name: policies
    description: Security recommendations
    externalDocs:
      description: Find out more
      url: 'http://TBD'
  - name: policies_admin
    description: Security recommendations administration
    externalDocs:
      description: Find out more
      url: 'http://TBD'
schemes:
  - http
  - https
paths:
  /policies:
    get:
      tags:
        - policies
      summary: Lists all the security recommendations
      description: >-
        Provides a list of all the recommendations along with a
        description for each one.
      operationId: getPolicies
      produces:
        - application/json
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/Policies"
        <<: *API_RESPONSES
  '/policies/{policy_id}':
    get:
      tags:
        - policies
      summary: Provides the details on a security recommendation
      description: Provides all the information on the security recommendation.
      operationId: getPoliciesById
      produces:
        - application/json
      parameters:
        - name: policy_id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Request succeeded.
          schema:
            $ref: "#/definitions/PolicyData"
        <<: *API_RESPONSES
    patch:
      tags:
      - policies
      summary: Conveys the security recommendation to the Orchestrator
      description: Forwards the security recommendation to the Orchestrator waiting for it's reply.
      operationId: conveyPolicy
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: policy_id
          in: path
          required: true
          type: string
        - in: body
          name: body
          description: The security recommendation data
          required: true
          schema:
            $ref: "#/definitions/ApplyPolicy"
      responses: *API_RESPONSES
  '/admin/policies':
    post:
      tags:
        - policies_admin
      summary: Persists a new security recommendation
      description: Stores a security recommendation and marks it as not yet applied.
      operationId: createPolicy
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: The security recommendation data
          required: true
          schema:
            $ref: "#/definitions/PolicyData"
      responses: *API_RESPONSES
definitions:
  # HATEOAS links.
  hateoas_links:
    type: object
    required:
      - "self"
      - "parent"
    properties:
      self:
        required:
          - "href"
          - "title"
        properties:
          href:
            type: "string"
          title:
            type: "string"
        type: "object"
      parent:
        required:
          - "href"
          - "title"
        properties:
          href:
            type: "string"
          title:
            type: "string"
        type: "object"
  hateoas_links_self:
    type: object
    required:
      - "self"
    properties:
      self:
        type: object
        required:
          - "href"
          - "title"
        properties:
          href:
            type: "string"
          title:
            type: "string"

  # Results metadata.
  results_meta:
    type: object
    required:
      - "max_results"
      - "page"
      - "total"
    properties:
      max_results:
        type: "number"
      page:
        type: "number"
      total:
        type: "number"


  Policies:
    type: object
    required:
      - "_meta"
      - "_links"
      - "_items"
    properties:
      _meta:
        $ref: "#/definitions/results_meta"
      _links:
        $ref: "#/definitions/hateoas_links"
      _items:
        type: array
        items:
          $ref: "#/definitions/PolicyData"
  PolicyData:
    type: object
    required:
      - "_id"
      - "_created"
      - "_updated"
      - "_etag"
      - "tenant_id"
      - "detection"
      - "severity"
      - "status"
      - "attack"
      - "recommendation"
      - "_links"
    properties:
      _id:
        type: string
      _created:
        type: string
      _updated:
        type: string
      _etag:
        type: string
      tenant_id:
        type: string
      detection:
        type: string
      severity:
        type: integer
      status:
        type: string
      attack:
        type: string
      recommendation:
        type: string
      _links:
        $ref: "#/definitions/hateoas_links_self"
  ApplyPolicy:
    type: object
    required:
      - "status"
    properties:
      status:
        type: string

externalDocs:
  description: Find out more about the Dashboard
  url: 'https://github.com/shield-h2020/dashboard'
